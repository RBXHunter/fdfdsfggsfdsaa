local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local localPlayer = Players.LocalPlayer

-- Функция getNil для поиска скрытых объектов
local function getNil(name, class)
    for _, v in next, getnilinstances() do
        if v.ClassName == class and v.Name == name then
            return v
        end
    end
end

-- Создание GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ControlGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = localPlayer.PlayerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 200)
frame.Position = UDim2.new(0.5, -100, 0.5, -100)
frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
frame.BorderSizePixel = 2
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Text = "ESP & Collision Control"
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.Parent = frame

local espButton = Instance.new("TextButton")
espButton.Size = UDim2.new(0, 180, 0, 40)
espButton.Position = UDim2.new(0, 10, 0, 40)
espButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
espButton.TextColor3 = Color3.fromRGB(255, 255, 255)
espButton.Text = "Toggle Submarine ESP: ON"
espButton.Font = Enum.Font.SourceSans
espButton.TextSize = 16
espButton.Parent = frame

local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 80, 0, 40)
closeButton.Position = UDim2.new(0, 10, 0, 90)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Text = "Close GUI"
closeButton.Font = Enum.Font.SourceSans
closeButton.TextSize = 16
closeButton.Parent = frame

local killButton = Instance.new("TextButton")
killButton.Size = UDim2.new(0, 80, 0, 40)
killButton.Position = UDim2.new(0, 110, 0, 90)
killButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
killButton.TextColor3 = Color3.fromRGB(255, 255, 255)
killButton.Text = "Kill Script"
killButton.Font = Enum.Font.SourceSans
killButton.TextSize = 16
killButton.Parent = frame

-- Переменные для управления
local connections = {}
local espElements = {}
local processedParts = {} -- Кэш обработанных частей
local isESPEnabled = true
local isScriptActive = true
local lastUpdate = 0
local updateInterval = 2 -- Интервал обновления 2 секунды

-- Таблица размеров для рабочих пространств
local workspaceSizes = {
    ["Plane Workspace"] = 150,
    ["Helicopter Workspace"] = 150,
    ["Vehicle Workspace"] = 60,
    ["Tank Workspace"] = 60,
    ["Submarine Workspace"] = 250,
    ["RC Workspace"] = 60,
    ["Hovercraft Workspace"] = 60,
    ["Drone Workspace"] = 60,
    ["Boat Workspace"] = 200
}

-- Функция для проверки, принадлежит ли объект группе игрока
local function isOwnGroup(obj)
    local owner = obj:GetAttribute("Owner")
    local isOwn = owner and tostring(owner) == tostring(localPlayer.Name)
    print("Checking Owner for", obj.Name, "Owner:", owner, "IsOwnGroup:", isOwn)
    return isOwn
end

-- Функция для обработки папки или модели Collision/Collisions
local function processCollisionObject(obj, size)
    local children = obj:GetChildren()
    for i, part in ipairs(children) do
        if part:IsA("BasePart") then
            if not processedParts[part] or processedParts[part].size ~= size then
                print("Processing part in", obj:GetFullName(), "Index:", i, "Name:", part.Name)
                part.Size = Vector3.new(size, size, size)
                part.CanCollide = false
                part.CanQuery = true
                processedParts[part] = {size = size}
            else
                print("Skipped already processed part:", part:GetFullName(), "Index:", i)
            end
        else
            print("Skipped non-BasePart in", obj:GetFullName(), "Index:", i, "Name:", part.Name, "Class:", part.ClassName)
        end
    end
end

-- Функция для рекурсивного поиска всех папок и моделей Collision/Collisions
local function collectCollisionParts(model, size)
    if not model or not isScriptActive then return end
    
    if not isOwnGroup(model) then
        print("Processing model:", model.Name, "in", model.Parent.Name)
        for _, child in ipairs(model:GetDescendants()) do
            if (child.Name == "Collision" or child.Name == "Collisions") and (child:IsA("Folder") or child:IsA("Model")) then
                print("Found Collision/Collisions:", child:GetFullName())
                processCollisionObject(child, size)
            end
        end
    else
        print("Skipping model (own group):", model.Name)
    end
end

-- Функция для обработки скрытых частей дронов
local function processDroneParts()
    local dronePart = getNil("Part", "Part")
    if dronePart then
        print("Found hidden drone Part:", dronePart:GetFullName())
        local parentModel = dronePart:FindFirstAncestorOfClass("Model")
        if parentModel and parentModel.Parent.Name == "Drone Workspace" and not isOwnGroup(parentModel) then
            if not processedParts[dronePart] or processedParts[dronePart].size ~= 60 then
                print("Processing drone part:", dronePart:GetFullName())
                dronePart.Size = Vector3.new(60, 60, 60)
                dronePart.CanCollide = false
                dronePart.CanQuery = true
                processedParts[dronePart] = {size = 60}
            else
                print("Skipped already processed drone part:", dronePart:GetFullName())
            end
        else
            print("Skipped drone part (no valid model or own group):", dronePart:GetFullName())
        end
    else
        print("No hidden drone Part found")
    end
end

-- Функция для установки SpeedUpgrades для всех моделей
local function processSpeedUpgrades(model)
    local speedUpgrades = model:GetAttribute("SpeedUpgrades")
    print("Checking SpeedUpgrades for", model.Name, "Current value:", speedUpgrades)
    if speedUpgrades == nil or speedUpgrades ~= 5 then
        model:SetAttribute("SpeedUpgrades", 5)
        print("Set SpeedUpgrades to 5 for", model.Name)
    else
        print("SpeedUpgrades already 5 for", model.Name)
    end
end

-- Функция для создания ESP
local function createESP(part)
    if not part or espElements[part] then return end
    local highlight = Instance.new("Highlight")
    highlight.FillColor = Color3.fromRGB(0, 255, 0)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    highlight.Parent = part
    espElements[part] = highlight
    print("Created ESP for part:", part:GetFullName())
end

-- Функция для удаления ESP
local function removeESP(part)
    if espElements[part] then
        espElements[part]:Destroy()
        espElements[part] = nil
        print("Removed ESP for part:", part:GetFullName())
    end
end

-- Функция для очистки всех ESP
local function clearAllESP()
    for part, highlight in pairs(espElements) do
        if highlight and highlight.Parent then
            highlight:Destroy()
        end
    end
    espElements = {}
    print("Cleared all ESP")
end

-- Функция для обработки субмарин (ESP)
local function processSubmarine(sub)
    if not isScriptActive or not sub:IsA("Model") then return end
    
    local isOwn = isOwnGroup(sub)
    for _, descendant in ipairs(sub:GetDescendants()) do
        if descendant:IsA("BasePart") and not descendant.Parent:IsA("Accessory") then
            if isESPEnabled and not isOwn then
                createESP(descendant)
            else
                removeESP(descendant)
            end
        end
    end
end

-- Функция для обновления всех рабочих пространств
local function updateWorkspaces()
    if not isScriptActive then return end
    local gameSystems = workspace:FindFirstChild("Game Systems")
    if not gameSystems then
        print("Game Systems not found")
        return
    end
    
    -- Обработка Collision/Collisions и SpeedUpgrades для всех рабочих пространств
    for workspaceName, size in pairs(workspaceSizes) do
        local workspaceFolder = gameSystems:FindFirstChild(workspaceName)
        if workspaceFolder then
            print("Processing workspace:", workspaceName)
            for _, model in ipairs(workspaceFolder:GetChildren()) do
                if model:IsA("Model") then
                    collectCollisionParts(model, size)
                    processSpeedUpgrades(model)
                end
            end
        else
            print("Workspace not found:", workspaceName)
        end
    end
    
    -- Обработка скрытых частей дронов
    processDroneParts()
    
    -- Обработка ESP для субмарин
    local submarineWorkspace = gameSystems:FindFirstChild("Submarine Workspace")
    if submarineWorkspace then
        clearAllESP()
        for _, sub in ipairs(submarineWorkspace:GetChildren()) do
            processSubmarine(sub)
        end
    else
        print("Submarine Workspace not found")
    end
end

-- Периодическое обновление
local heartbeatConnection = RunService.Heartbeat:Connect(function(deltaTime)
    if not isScriptActive then return end
    lastUpdate = lastUpdate + deltaTime
    if lastUpdate >= updateInterval then
        updateWorkspaces()
        lastUpdate = 0
    end
end)
table.insert(connections, heartbeatConnection)

-- Очистка кэша при удалении объектов
local function onDescendantRemoving(descendant)
    if processedParts[descendant] then
        processedParts[descendant] = nil
    end
    if espElements[descendant] then
        removeESP(descendant)
    end
end
table.insert(connections, workspace.DescendantRemoving:Connect(onDescendantRemoving))

-- Обработчик кнопки Toggle ESP
espButton.Activated:Connect(function()
    isESPEnabled = not isESPEnabled
    espButton.Text = "Toggle Submarine ESP: " .. (isESPEnabled and "ON" or "OFF")
    print("ESP Toggled:", isESPEnabled)
    updateWorkspaces()
end)

-- Обработчик кнопки Close GUI
closeButton.Activated:Connect(function()
    screenGui.Enabled = false
end)

-- Обработчик кнопки Kill Script
killButton.Activated:Connect(function()
    isScriptActive = false
    for _, connection in ipairs(connections) do
        connection:Disconnect()
    end
    connections = {}
    
    clearAllESP()
    processedParts = {}
    screenGui.Enabled = false
end)
