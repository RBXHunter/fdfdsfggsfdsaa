local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local task = task

local player = Players.LocalPlayer
if not player then
    player = Players:GetPropertyChangedSignal("LocalPlayer"):Wait() and Players.LocalPlayer
end

local humanoid, rootPart, animator
local FLY_ANIM_IDS = {
    ["13376962659"] = true,
    ["13362587853"] = true,
}
local FLY_DELAY = 0.3
local FLY_DURATION = 1.5
local FLY_SPEED = 150

local isFlying = false
local flyEndTime = 0

local function debugPrint(...)
    print("[FlightScript]", ...)
end

local function setupCharacter(char)
    debugPrint("Character loaded:", char.Name)
    humanoid = char:WaitForChild("Humanoid")
    rootPart = char:WaitForChild("HumanoidRootPart")

    animator = humanoid:FindFirstChildOfClass("Animator")
    if not animator then
        animator = Instance.new("Animator")
        animator.Parent = humanoid
        debugPrint("Animator не найден, создали новый")
    end

    animator.AnimationPlayed:Connect(function(track)
        if not _G.isScriptEnabled then return end
        local animId = track.Animation.AnimationId:gsub("rbxassetid://", "")
        debugPrint("Анимация запущена:", animId)

        if FLY_ANIM_IDS[animId] then
            if isFlying then
                debugPrint("Полёт уже активен, новый запуск игнорируется")
                return
            end
            debugPrint("Анимация полёта обнаружена, старт через", FLY_DELAY, "сек")
            task.delay(FLY_DELAY, function()
                if not _G.isScriptEnabled or isFlying then return end
                debugPrint("Старт полёта на", FLY_DURATION, "сек")
                isFlying = true
                flyEndTime = tick() + FLY_DURATION
            end)
        end
    end)
end

if player.Character then
    setupCharacter(player.Character)
end
player.CharacterAdded:Connect(setupCharacter)

RunService.RenderStepped:Connect(function()
    if not _G.isScriptEnabled then
        if isFlying then
            isFlying = false
            if rootPart then
                rootPart.Velocity = Vector3.new(0, 0, 0)
            end
            debugPrint("Полёт остановлен из-за отключения скрипта")
        end
        return
    end
    if not isFlying then return end
    if not humanoid or not rootPart then return end

    if tick() > flyEndTime then
        isFlying = false
        rootPart.Velocity = Vector3.new(0, 0, 0)
        debugPrint("Полёт завершён по времени")
        return
    end

    local cam = workspace.CurrentCamera
    if not cam then return end

    local look = cam.CFrame.LookVector
    local velocity = look * FLY_SPEED
    rootPart.Velocity = velocity
end)
