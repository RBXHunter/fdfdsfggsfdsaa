local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local FREEZE_ANIM_IDS = {
	["13376869471"] = true,
	["13309500827"] = true
}

local kill = false
local connections = {}

-- Создание рамки на цели
local function createTargetIndicator(target)
	if not target or not target:FindFirstChild("Head") or target:FindFirstChild("TargetGui") then return end

	local bb = Instance.new("BillboardGui")
	bb.Name = "TargetGui"
	bb.Size = UDim2.new(4, 0, 4, 0)
	bb.AlwaysOnTop = true
	bb.Adornee = target.Head
	bb.Parent = target

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1, 0, 1, 0)
	frame.BackgroundTransparency = 0.5
	frame.BackgroundColor3 = Color3.new(1, 0, 0)
	frame.BorderSizePixel = 0
	frame.Parent = bb
end

-- Очистка рамок
local function clearIndicators()
	local live = workspace:FindFirstChild("Live")
	if not live then return end

	for _, model in pairs(live:GetChildren()) do
		local gui = model:FindFirstChild("TargetGui")
		if gui then gui:Destroy() end
	end
end

-- Поиск цели перед игроком
local function findTarget()
	local cam = workspace.CurrentCamera
	if not cam then return nil end

	local origin = cam.CFrame.Position
	local dir = cam.CFrame.LookVector
	local live = workspace:FindFirstChild("Live")

	if not live then return nil end

	local best, bestDot = nil, -1
	for _, model in pairs(live:GetChildren()) do
		local hrp = model:FindFirstChild("HumanoidRootPart")
		if model ~= player.Character and hrp then
			local to = (hrp.Position - origin)
			local dist = to.Magnitude
			if dist <= 100 then
				local dot = dir:Dot(to.Unit)
				if dot >= 0.86 and dot > bestDot then
					bestDot = dot
					best = model
				end
			end
		end
	end

	clearIndicators()
	if best then createTargetIndicator(best) end
	return best
end

-- Главный обработчик телепорта
local isFrozen = false
local freezePos = nil

local function setup(char)
	local humanoid = char:WaitForChild("Humanoid", 5)
	local root = char:WaitForChild("HumanoidRootPart", 5)
	if not humanoid or not root then return end

	local animator = humanoid:FindFirstChildWhichIsA("Animator")
	if not animator then
		warn("❌ Animator не найден.")
		return
	end

	local animationConnection = animator.AnimationPlayed:Connect(function(tr)
	local id = tr.Animation and tr.Animation.AnimationId and tr.Animation.AnimationId:match("%d+")
	if not id or not FREEZE_ANIM_IDS[id] then return end

	isFrozen = true

	local target = findTarget()
	if target and target:FindFirstChild("HumanoidRootPart") then
		local hrp = target.HumanoidRootPart
		local back = -hrp.CFrame.LookVector * 3
		local pos = hrp.Position + back + Vector3.new(0, 2, 0)
		local look = hrp.CFrame.LookVector

		task.delay(1.5, function()
			if not char:IsDescendantOf(workspace) then return end

			local newCFrame = CFrame.new(pos, pos + look)
			root.CFrame = newCFrame
			root.Velocity = Vector3.new(0, root.Velocity.Y, 0)

			local cam = workspace.CurrentCamera
			if cam then cam.CFrame = newCFrame end

			freezePos = pos
		end)
	else
		freezePos = root.Position
	end

	local stopHandled = false

	local function resetFreeze()
		if stopHandled then return end
		stopHandled = true
		isFrozen = false
		freezePos = nil
		clearIndicators()
	end

	local stoppedConnection = tr.Stopped:Connect(resetFreeze)
	task.delay(1, resetFreeze) -- сброс через 3 секунды, даже если Stopped не сработает

	table.insert(connections, stoppedConnection)
end)


	local heartbeatConnection = RunService.Heartbeat:Connect(function()
		if kill or not isFrozen or not freezePos then return end
		if not char:IsDescendantOf(workspace) then return end

		local target = findTarget()
		if not target or not target:FindFirstChild("HumanoidRootPart") then return end

		local targetPos = target.HumanoidRootPart.Position
		local direction = (targetPos - root.Position).Unit
		local y = root.Position.Y
		local newPos = Vector3.new(freezePos.X, y, freezePos.Z)

		root.CFrame = CFrame.new(newPos, newPos + direction)
		root.Velocity = Vector3.new(0, root.Velocity.Y, 0)
	end)

	local renderConnection = RunService.RenderStepped:Connect(function()
		if not kill then
			findTarget()
		end
	end)

	table.insert(connections, animationConnection)
	table.insert(connections, heartbeatConnection)
	table.insert(connections, renderConnection)
end

if player.Character then
	task.spawn(setup, player.Character)
end

local characterConnection = player.CharacterAdded:Connect(setup)
table.insert(connections, characterConnection)
