local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local CONFIG = {
    LiftOffset = 100, -- Насколько вверх поднимать
    LiftTime = 0.3,   -- Время твина
    ResetTime = 0.3,  -- Время твина вниз
    ForceSpeedPull = 500,
    DisableBeforeEndPull = 0.5,
    EnableWarnings = false,
}

local player = Players.LocalPlayer
local humanoid

local function optionalWarn(msg)
    if CONFIG.EnableWarnings then
        warn(msg)
    end
end

local function isFalling(h)
    local state = h:GetState()
    return state == Enum.HumanoidStateType.Freefall 
        or state == Enum.HumanoidStateType.Jumping 
        or state == Enum.HumanoidStateType.FallingDown
end

local function tweenLiftUpAndDown(root)
    if not root or not root:IsA("BasePart") then return end

    local upGoal = { Position = root.Position + Vector3.new(0, CONFIG.LiftOffset, 0) }
    local downGoal = { Position = root.Position }

    local upTween = TweenService:Create(root, TweenInfo.new(CONFIG.LiftTime, Enum.EasingStyle.Sine), upGoal)
    local downTween = TweenService:Create(root, TweenInfo.new(CONFIG.ResetTime, Enum.EasingStyle.Sine), downGoal)

    upTween:Play()
    upTween.Completed:Connect(function()
        task.wait(0.1)
        downTween:Play()
    end)
end

local function applyPull(track, h)
    if not _G.isScriptEnabled then return end
    local root = h.Parent:FindFirstChild("HumanoidRootPart")
    if not root then 
        optionalWarn("No HumanoidRootPart found") 
        return 
    end

    local alive = true
    local diedConnection
    diedConnection = h.Died:Connect(function() alive = false end)

    local startTime = tick()
    local len = track.Length or 0
    local conn
    conn = RunService.Heartbeat:Connect(function()
        if not _G.isScriptEnabled or not alive or not track.IsPlaying then
            root.Velocity = Vector3.new(0, root.Velocity.Y, 0)
            conn:Disconnect()
            if diedConnection.Connected then
                diedConnection:Disconnect()
            end
            return
        end
        if tick() - startTime >= len - CONFIG.DisableBeforeEndPull then
            root.Velocity = Vector3.new(0, root.Velocity.Y, 0)
            conn:Disconnect()
            if diedConnection.Connected then
                diedConnection:Disconnect()
            end
            return
        end
        local cam = workspace.CurrentCamera
        local look = cam and cam.CFrame.LookVector or Vector3.new()
        local dir = Vector3.new(look.X, 0, look.Z)
        if dir.Magnitude > 0 then dir = dir.Unit end

        root.Velocity = dir * CONFIG.ForceSpeedPull + Vector3.new(0, root.Velocity.Y, 0)
    end)
end

local function setupEffects(humanoid)
    humanoid.AnimationPlayed:Connect(function(track)
        print("[DEBUG] AnimationPlayed:", track.Animation.AnimationId)
        if not _G.isScriptEnabled then return end
        local animId = track.Animation.AnimationId

        local function overrideAnimation(orig, repl)
            if animId:find(orig) then
                print("[DEBUG] overrideAnimation:", orig, "→", repl)
                track:Stop()
                local anim = Instance.new("Animation")
                anim.AnimationId = "rbxassetid://" .. repl
                local animator = humanoid:FindFirstChildOfClass("Animator")
                if not animator then
                    animator = Instance.new("Animator")
                    animator.Parent = humanoid
                end
                local newTrack = animator:LoadAnimation(anim)
                newTrack:Play()
                return true
            end
            return false
        end

        if overrideAnimation("12296882427", "12463072679") then 
            return 
        end

        print("[DEBUG] After override, animId:", animId)
        if animId:find("12296113986") then
            print("[DEBUG] applyPull and TweenUp for", animId)
            applyPull(track, humanoid)

            local root = humanoid.Parent:FindFirstChild("HumanoidRootPart")
            tweenLiftUpAndDown(root)
        end
    end)
end

local function onCharacterAdded(character)
    humanoid = character:WaitForChild("Humanoid")
    setupEffects(humanoid)
end

if player.Character then
    onCharacterAdded(player.Character)
end
player.CharacterAdded:Connect(onCharacterAdded)
