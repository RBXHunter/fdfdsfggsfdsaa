local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local CONFIG = {
    TargetHipHeight = 200,
    ResetHipHeight = 0,
    HipHeightResetBeforeEnd = 0.5,
    DelayBeforeHipHeightChange = 1,
    TransitionTime = 0.3,
    TransitionTime2 = 0,
    EnableWarnings = false,
    ForceSpeedPull = 500,
    DisableBeforeEndPull = 0.5,
}

local player = Players.LocalPlayer
local humanoid

local function optionalWarn(msg)
    if CONFIG.EnableWarnings then
        warn(msg)
    end
end

local function isFalling(h)
    local state = h:GetState()
    return state == Enum.HumanoidStateType.Freefall or state == Enum.HumanoidStateType.Jumping or state == Enum.HumanoidStateType.FallingDown
end

local function transitionHipHeight(h, target, duration)
    if not _G.isScriptEnabled then return end
    local initial = h.HipHeight
    local elapsed = 0
    while elapsed < duration do
        elapsed += RunService.Heartbeat:Wait()
        local alpha = elapsed / duration
        if not _G.isScriptEnabled or isFalling(h) then
            return
        end
        h.HipHeight = initial + (target - initial) * alpha
    end
    if not _G.isScriptEnabled or isFalling(h) then
        return
    end
    h.HipHeight = target
end

local function applyPull(track, h)
    if not _G.isScriptEnabled then return end
    local root = h.Parent:FindFirstChild("HumanoidRootPart")
    if not root then optionalWarn("No HumanoidRootPart found") return end

    local alive = true
    local diedConnection
    diedConnection = h.Died:Connect(function() alive = false end)

    local startTime = tick()
    local len = track.Length or 0
    local conn
    conn = RunService.Heartbeat:Connect(function()
        if not _G.isScriptEnabled or not alive or not track.IsPlaying then
            root.Velocity = Vector3.new(0, root.Velocity.Y, 0)
            conn:Disconnect()
            if diedConnection.Connected then
                diedConnection:Disconnect()
            end
            return
        end
        if tick() - startTime >= len - CONFIG.DisableBeforeEndPull then
            root.Velocity = Vector3.new(0, root.Velocity.Y, 0)
            conn:Disconnect()
            if diedConnection.Connected then
                diedConnection:Disconnect()
            end
            return
        end
        local cam = workspace.CurrentCamera
        local look = cam and cam.CFrame.LookVector or Vector3.new()
        local dir = Vector3.new(look.X, 0, look.Z)
        if dir.Magnitude > 0 then dir = dir.Unit end

        root.Velocity = dir * CONFIG.ForceSpeedPull + Vector3.new(0, root.Velocity.Y, 0)
    end)
end

local function setupHipHeight(humanoid)
    humanoid.AnimationPlayed:Connect(function(track)
        if not _G.isScriptEnabled then return end
        local animId = track.Animation.AnimationId

        local function overrideAnimation(originalId, replacementId)
            if animId:find(originalId) then
                track:Stop()
                local anim = Instance.new("Animation")
                anim.AnimationId = "rbxassetid://" .. replacementId

                local animator = humanoid:FindFirstChildOfClass("Animator")
                if not animator then
                    animator = Instance.new("Animator")
                    animator.Parent = humanoid
                end

                local newTrack = animator:LoadAnimation(anim)
                newTrack:Play()
                return true
            end
            return false
        end

        if overrideAnimation("12296882427", "12463072679") then return end
    end)
end

local function onCharacterAdded(character)
    humanoid = character:WaitForChild("Humanoid")
    setupHipHeight(humanoid)
end

if player.Character then
    onCharacterAdded(player.Character)
end
player.CharacterAdded:Connect(onCharacterAdded)
