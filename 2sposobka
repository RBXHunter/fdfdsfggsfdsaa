local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local CONFIG = {
    TargetHipHeight = 100,
    ResetHipHeight = 0,
    HipHeightResetBeforeEnd = 0.5,
    DelayBeforeHipHeightChange = 1,
    TransitionTime = 0.3,
    TransitionTime2 = 0,
    EnableWarnings = false,
    ForceSpeedPull = 500,
    DisableBeforeEndPull = 0.5,
}

-- Переменная для управления работой скрипта
_G.isScriptEnabled = _G.isScriptEnabled ~= false

-- UI для отключения скрипта
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SposobkaGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 100, 0, 50)
button.Position = UDim2.new(0, 120, 0, 10)
button.Text = "Kill Script"
button.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.Parent = screenGui

button.MouseButton1Click:Connect(function()
    _G.isScriptEnabled = false
    screenGui:Destroy()
    print("Sposobka script disabled")
end)

local function optionalWarn(msg)
    if CONFIG.EnableWarnings then
        warn(msg)
    end
end

local function isFalling(h)
    local state = h:GetState()
    return state == Enum.HumanoidStateType.Freefall or state == Enum.HumanoidStateType.Jumping or state == Enum.HumanoidStateType.FallingDown
end

local function transitionHipHeight(h, target, duration)
    local initial = h.HipHeight
    local elapsed = 0
    while elapsed < duration and _G.isScriptEnabled do
        elapsed += RunService.Heartbeat:Wait()
        local alpha = elapsed / duration
        if not isFalling(h) then
            h.HipHeight = initial + (target - initial) * alpha
        end
    end
    if not isFalling(h) and _G.isScriptEnabled then
        h.HipHeight = target
    end
end

local function applyPull(track, h)
    local root = h.Parent:FindFirstChild("HumanoidRootPart")
    if not root then optionalWarn("No HumanoidRootPart found") return end

    local alive = true
    h.Died:Connect(function() alive = false end)

    local startTime = tick()
    local len = track.Length or 0
    local conn
    conn = RunService.Heartbeat:Connect(function()
        if not _G.isScriptEnabled or not alive or not track.IsPlaying then
            root.Velocity = Vector3.new(0, root.Velocity.Y, 0)
            conn:Disconnect()
            return
        end
        if tick() - startTime >= len - CONFIG.DisableBeforeEndPull then
            root.Velocity = Vector3.new(0, root.Velocity.Y, 0)
            conn:Disconnect()
            return
        end
        local cam = workspace.CurrentCamera
        local look = cam and cam.CFrame.LookVector or Vector3.new()
        local dir = Vector3.new(look.X, 0, look.Z)
        if dir.Magnitude > 0 then dir = dir.Unit end

        root.Velocity = dir * CONFIG.ForceSpeedPull + Vector3.new(0, root.Velocity.Y, 0)
    end)
end

local function setupHipHeight(humanoid)
    humanoid.AnimationPlayed:Connect(function(track)
        if not _G.isScriptEnabled then return end

        local animId = track.Animation.AnimationId

        if animId:find("12296113986") then
            applyPull(track, humanoid)

            task.delay(CONFIG.DelayBeforeHipHeightChange, function()
                if _G.isScriptEnabled and humanoid and humanoid.Parent and track.IsPlaying and not isFalling(humanoid) then
                    transitionHipHeight(humanoid, CONFIG.TargetHipHeight, CONFIG.TransitionTime)
                end
            end)

            task.delay(track.Length - CONFIG.HipHeightResetBeforeEnd, function()
                if _G.isScriptEnabled and humanoid and humanoid.Parent then
                    transitionHipHeight(humanoid, CONFIG.ResetHipHeight, CONFIG.TransitionTime2)
                end
            end)
        end
    end)
end

local function onCharacterAdded(character)
    if not _G.isScriptEnabled then return end
    local humanoid = character:WaitForChild("Humanoid")
    setupHipHeight(humanoid)
end

if player.Character then
    onCharacterAdded(player.Character)
end
player.CharacterAdded:Connect(onCharacterAdded)
