-- üß† –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- üßç –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Backpack = LocalPlayer:WaitForChild("Backpack")
local Humanoid = Character:WaitForChild("Humanoid")

-- üï∫ –°–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://14659143045"
local track = Humanoid:LoadAnimation(Anim)

-- üîÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏
local toggleState = false

local function sidewaysDashTrue()
	if toggleState then return end
	toggleState = true
	track.Looped = true
	track:Play(1, 1, 100)
end

local function sidewaysDashFalse()
	if not toggleState then return end
	toggleState = false
	local fadeTime = 0.5
	local startWeight = track.WeightCurrent or 1
	local startTime = tick()

	local conn
	conn = RunService.RenderStepped:Connect(function()
		local alpha = math.clamp((tick() - startTime) / fadeTime, 0, 1)
		local newWeight = (1 - alpha) * startWeight
		pcall(function() track:AdjustWeight(newWeight) end)

		if alpha >= 1 then
			conn:Disconnect()
			track:Stop()
		end
	end)
end

-- üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ Skill
function Skill(SkillName, callback, Cooldown, ToggleCooldown)
	local SkillTool = Instance.new("Tool")
	SkillTool.Name = SkillName
	SkillTool.RequiresHandle = false
	SkillTool.Parent = Backpack

	Cooldown = Cooldown or 0
	ToggleCooldown = ToggleCooldown or 0.2

	-- üîé –ü–æ–∏—Å–∫ Hotbar GUI
	local HotbarFolder = LocalPlayer:FindFirstChild("PlayerGui") and LocalPlayer.PlayerGui:FindFirstChild("Hotbar")
	if not HotbarFolder then
		warn("Hotbar GUI –Ω–µ –Ω–∞–π–¥–µ–Ω!")
		return
	end

	local SkillHotbar, SkillSlot
	for i = 1, 13 do
		local slot = HotbarFolder.Backpack.Hotbar:FindFirstChild(tostring(i))
		if slot then
			local toolNameText = slot.Base.ToolName.Text
			if toolNameText == SkillName then
				SkillHotbar = slot.Base
				SkillSlot = i
				break
			end
		end
	end

	if not SkillHotbar then
		warn("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–ª–æ—Ç –¥–ª—è –Ω–∞–≤—ã–∫–∞ –≤ —Ö–æ—Ç–±–∞—Ä–µ")
		return
	end

	-- üí° –ö–ª–æ–Ω–∏—Ä—É–µ–º GUI –∫—É–ª–¥–∞—É–Ω–∞
	local CooldownGui = HotbarFolder.Backpack.LocalScript:FindFirstChild("Cooldown")
	if not CooldownGui then
		warn("Cooldown GUI –Ω–µ –Ω–∞–π–¥–µ–Ω")
		return
	end

	CooldownGui = CooldownGui:Clone()
	CooldownGui.Size = UDim2.new(1, 0, 0, 0)
	CooldownGui.Parent = SkillHotbar.Parent

	-- ‚ö° –§—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
	local SkillActivated = false
	local State

	local function onActivate()
		SkillHotbar.Overlay.Visible = false
		if Cooldown ~= 1234 and CooldownGui.Size == UDim2.new(1, 0, 0, 0) then
			CooldownGui.Size = UDim2.new(1, 0, -1, 0)
			TweenService:Create(CooldownGui, TweenInfo.new(Cooldown, Enum.EasingStyle.Linear), {
				Size = UDim2.new(1, 0, 0, 0)
			}):Play()
			callback()
		elseif Cooldown == 1234 then
			if not State then
				State = true
				CooldownGui.Size = UDim2.new(1, 0, -1, 0)
				callback()
			else
				State = false
				CooldownGui.Size = UDim2.new(1, 0, -1, 0)
				TweenService:Create(CooldownGui, TweenInfo.new(ToggleCooldown, Enum.EasingStyle.Linear), {
					Size = UDim2.new(1, 0, 0, 0)
				}):Play()
				callback()
			end
		end
	end

	local SkillFunction = SkillTool.Activated:Connect(onActivate)

	local SkillFunction2 = UserInputService.InputBegan:Connect(function(input, processed)
		if processed then return end
		local keys = {
			[0] = Enum.KeyCode.Zero, Enum.KeyCode.One, Enum.KeyCode.Two, Enum.KeyCode.Three, Enum.KeyCode.Four,
			Enum.KeyCode.Five, Enum.KeyCode.Six, Enum.KeyCode.Seven, Enum.KeyCode.Eight, Enum.KeyCode.Nine
		}
		if keys[SkillSlot] and input.KeyCode == keys[SkillSlot] then
			onActivate()
		end
	end)

	local SkillDelete = SkillTool.AncestryChanged:Connect(function(_, parent)
		if parent == nil then
			SkillFunction:Disconnect()
			SkillFunction2:Disconnect()
			PlayerDied:Disconnect()
		elseif parent == workspace:FindFirstChild("Live") and parent:FindFirstChild(LocalPlayer.Name) then
			task.wait()
			SkillTool.Parent = Backpack
		end
	end)

	local PlayerDied = Humanoid.Died:Once(function()
		SkillFunction:Disconnect()
		SkillFunction2:Disconnect()
		SkillDelete:Disconnect()
	end)

	return SkillTool
end

-- üß™ –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞–≤—ã–∫ "Sideways Dash"
local skillToggle = false
local TestSkill2 = Skill("Sideways Dash", function()
	skillToggle = not skillToggle
	if skillToggle then
		sidewaysDashTrue()
	else
		sidewaysDashFalse()
	end
end, 1234, 1)
